<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.subject.mapper.SubSubjectMapper">
    
    <resultMap type="SubSubject" id="SubSubjectResult">
        <result property="id"    column="id"    />
        <result property="title"    column="title"    />
        <result property="content"    column="content"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createByName"    column="create_by_name"    />
        <result property="updateByName"    column="update_by_name"    />
    </resultMap>

    <sql id="selectSubSubjectVo">
        select id, title, content, create_by, create_time, update_by, update_time, create_by_name, update_by_name from sub_subject
    </sql>

    <select id="selectSubSubjectList" parameterType="SubSubject" resultMap="SubSubjectResult">
        <include refid="selectSubSubjectVo"/>
        <where>  
            <if test="title != null  and title != ''"> and title like concat('%', #{title}, '%')</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="createByName != null  and createByName != ''"> and create_by_name like concat('%', #{createByName}, '%')</if>
        </where>
    </select>
    
    <select id="selectSubSubjectById" parameterType="Long" resultMap="SubSubjectResult">
        <include refid="selectSubSubjectVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSubSubject" parameterType="SubSubject" useGeneratedKeys="true" keyProperty="id">
        insert into sub_subject
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null  and title != ''">title,</if>
            <if test="content != null  and content != ''">content,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="createByName != null  and createByName != ''">create_by_name,</if>
            <if test="updateByName != null  and updateByName != ''">update_by_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null  and title != ''">#{title},</if>
            <if test="content != null  and content != ''">#{content},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="createByName != null  and createByName != ''">#{createByName},</if>
            <if test="updateByName != null  and updateByName != ''">#{updateByName},</if>
         </trim>
    </insert>

    <update id="updateSubSubject" parameterType="SubSubject">
        update sub_subject
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null  and title != ''">title = #{title},</if>
            <if test="content != null  and content != ''">content = #{content},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="createByName != null  and createByName != ''">create_by_name = #{createByName},</if>
            <if test="updateByName != null  and updateByName != ''">update_by_name = #{updateByName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSubSubjectById" parameterType="Long">
        delete from sub_subject where id = #{id}
    </delete>

    <delete id="deleteSubSubjectByIds" parameterType="String">
        delete from sub_subject where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>